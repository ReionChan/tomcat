@startuml

header "@ReionChan"
footer "@ReionChan"

skinparam backgroundColor WhiteSmoke

title "<font size=58>Tomcat - Lifecycle Abstraction"
participant Bootstrap
participant Catalina
participant Digester
participant Server
participant Service
participant Mapper
participant MapperListener
participant Executor
participant Connector
participant ProtocolHandler
participant AbstractProtocol
participant AbstractEndpoint
participant AbstractEndpoint.ConnectionHandler
participant Adapter
participant Engine
participant Host
participant HostConfig
participant Context
participant ContextConfig
participant Wrapper
participant Pipeline
participant Valve


' init
autonumber 1.1
Bootstrap -> Bootstrap : init()
activate Bootstrap
Bootstrap -> Catalina : newInstance()
deactivate Bootstrap
||30||

' load
autonumber 2.1
Bootstrap -> Bootstrap : load()
activate Bootstrap
Bootstrap -> Catalina : load()
activate Catalina
Catalina -> Digester : createStartDigester()
Catalina -> Digester : digester.parse(..)
activate Digester
Digester -> Server : newInstance()
Digester -> Service : newInstance()
activate Service
Service -> Mapper : new Mapper()
Service -> MapperListener : new MapperListener(..)
deactivate Service
Digester -> Executor : newInstance()
Digester -> Connector : new Connector(..)
activate Connector
Connector -> ProtocolHandler : newInstance()
activate ProtocolHandler
ProtocolHandler -> AbstractProtocol : AbstractProtocol(..)
activate AbstractProtocol
AbstractProtocol <- AbstractEndpoint : this.endpoint
AbstractProtocol -> AbstractEndpoint.ConnectionHandler : new ConnectionHandler(this)
deactivate AbstractProtocol
deactivate ProtocolHandler
deactivate Connector
Digester -> Engine : newInstance()
Digester -> Host : newInstance()
Digester -> Context : newInstance()
deactivate Digester
||30||

' catalina init
Catalina -> Server : init()
activate Server
Server -> Service : init()
activate Service
Service -> Engine : init()
Service -> Executor : init()
Service -> MapperListener : init()
Service -> Connector : init()
activate Connector
Connector -> Adapter : new CoyoteAdapter(this)
Connector -> ProtocolHandler : init()
activate ProtocolHandler
ProtocolHandler -> AbstractProtocol : init()
activate AbstractProtocol
AbstractProtocol -> AbstractEndpoint : init()
deactivate AbstractProtocol
deactivate ProtocolHandler
deactivate Connector
deactivate Service
deactivate Server
deactivate Catalina
deactivate Bootstrap
||30||

' start
autonumber 3.1
Bootstrap -> Bootstrap : start()
activate Bootstrap
Bootstrap -> Catalina : start()
activate Catalina
Catalina -> Server : start()
activate Server
Server  -> Service : start()
activate Service
Service -> Engine : start()
activate Engine
Engine -> Host : start()
activate Host
Host -> Host : init()
Host -> Context : start()
activate Context
Context -> Context : init()
Context -> ContextConfig : INITIALIZED
activate ContextConfig
ContextConfig -> ContextConfig : init()
note right
When Context's state is INITIALIZED
the LifecycleListener <ContextConfig> execute
contextConfig() to parse
conf/context.xml and META-INF/context.xml
end note
ContextConfig -> Context
deactivate ContextConfig
deactivate Context
Context -> Context : start()
activate Context
Context -> ContextConfig : fireLifecycleEvent
activate ContextConfig
ContextConfig -> ContextConfig : configureStart()
note right
Context fire CONFIGURE_START_EVENT
the LifecycleListener <ContextConfig>
execute configureStart() to parse
conf/web.xml and WEB-INF/web.xml
for servlets filters and listeners.
Put all Wrappers into Context
end note
deactivate ContextConfig
Context -> Wrapper : start()
activate Wrapper
Wrapper -> Wrapper : init()
Wrapper -> Pipeline : start()
activate Pipeline
Pipeline -> Pipeline : init()

' Pipeline
Pipeline -> Valve : start()
activate Valve
Valve -> Valve : init()
Valve -> Valve : start()
Valve -> Pipeline
deactivate Valve
Pipeline -> Wrapper
deactivate Pipeline
Wrapper -> Context
deactivate Wrapper
deactivate Context

' Context Pipeline
Context -> Pipeline : start()
activate Context
activate Pipeline
Pipeline -> Pipeline : init()
Pipeline -> Valve : start()
activate Valve
Valve -> Valve : init()
Valve -> Valve : start()
Valve -> Pipeline
deactivate Valve
Pipeline -> Context
deactivate Pipeline
Context -> Host
deactivate Context
Host -> HostConfig : STARTING
activate HostConfig
HostConfig -> HostConfig : start()
note right
When Host's state is STARTING
the LifecycleListener <HostConfig> execute start()
to deploy applications for any directories or WAR files.
Put all Contexts of applications into Host
Note:
    Host's method addChild(context) will make Context
    to execute its lifecycle method start()
end note
HostConfig -> Host
deactivate HostConfig
deactivate Host

' Host Pipeline
Host -> Pipeline : start()
activate Host
activate Pipeline
Pipeline -> Pipeline : init()
Pipeline -> Valve : start()
activate Valve
Valve -> Valve : init()
Valve -> Valve : start()
Valve -> Pipeline
deactivate Valve
Pipeline -> Host
deactivate Pipeline
Host -> Engine
deactivate Host
deactivate Engine

' Engine Pipeline
Engine -> Pipeline : start()
activate Engine
activate Pipeline
Pipeline -> Pipeline : init()
Pipeline -> Valve : start()
activate Valve
Valve -> Valve : init()
Valve -> Valve : start()
Valve -> Pipeline
deactivate Valve
Pipeline -> Engine
deactivate Pipeline
deactivate Engine

Service -> Executor : start()
Service -> MapperListener : start()
activate MapperListener
MapperListener -> MapperListener : registerHost(..)
MapperListener -> Mapper : addHost(..)
MapperListener -> MapperListener : registerContext(..)
MapperListener -> MapperListener : prepareWrapperMappingInfo(..)
MapperListener -> Mapper : addContextVersion(..)
deactivate MapperListener
Service -> Connector : start()
activate Connector
Connector -> ProtocolHandler : start()
activate ProtocolHandler
ProtocolHandler -> AbstractProtocol : start()
activate AbstractProtocol
AbstractProtocol -> AbstractEndpoint : start()
deactivate AbstractProtocol
deactivate ProtocolHandler
deactivate Connector
deactivate Service
deactivate Server
deactivate Catalina
deactivate Bootstrap

@enduml